plugins {
    id 'com.android.application'
}

apply plugin: 'com.android.application'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'androidx.navigation.safeargs'

android {
    compileSdkVersion 30

    defaultConfig {
        applicationId "de.uni.cc2coronotracker"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }

        allprojects {
            tasks.withType(JavaCompile) {
                options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        dataBinding true
        viewBinding true
    }
}

dependencies {
    implementation 'androidx.lifecycle:lifecycle-service:2.3.1'
    def core_version = "1.6.0"
    implementation "androidx.core:core:$core_version"

    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0'
    implementation 'androidx.navigation:navigation-fragment:2.3.5'
    implementation 'androidx.navigation:navigation-ui:2.3.5'

    // Play services for maps, etc.
    implementation 'com.google.android.gms:play-services-location:18.0.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.1'
    implementation 'com.google.android.gms:play-services-nearby:18.0.0'

    // Top-sheet implementation, we really don't need to reimplement this. :P
    implementation 'com.github.techisfun:androidtopsheet:0.2'
    // Swipeable button for lobby
    implementation 'com.github.stfalcon:swipeable-button:0.1.0'

    // Generating QR Codes
    implementation 'androidmads.library.qrgenearator:QRGenearator:1.0.4'
    implementation 'com.google.zxing:core:3.3.3'

    // eu certificate
    implementation "com.google.iot.cbor:cbor:0.01.02"
    implementation "com.augustcellars.cose:cose-java:0.9.7"
    implementation 'io.github.ehn-digital-green-development:base45:0.0.3'

    // statistics, graphs, etc
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    // Rest API requests
    implementation 'com.google.code.gson:gson:2.8.7'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // Utility packages.
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation 'org.apache.commons:commons-collections4:4.4'

    // Dependency Injection via daggers+hilt
    implementation 'com.google.dagger:hilt-android:2.38'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    annotationProcessor 'com.google.dagger:hilt-compiler:2.38'

    // Room persistence library
    def room_version = "2.3.0"
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"

    // For runtime permissions. Why reinvent the wheel?
    implementation 'com.karumi:dexter:6.2.2'

    // Generating QR Codes
    implementation 'com.budiyev.android:code-scanner:2.1.0'

    // Androidx preferences
    def preference_version = "1.1.1"
    implementation "androidx.preference:preference:$preference_version"


    // For instrumentation tests
    androidTestImplementation  'com.google.dagger:hilt-android-testing:2.38'
    androidTestAnnotationProcessor 'com.google.dagger:hilt-compiler:2.38'

    // For local unit tests
    testImplementation 'com.google.dagger:hilt-android-testing:2.38'
    testAnnotationProcessor 'com.google.dagger:hilt-compiler:2.38'

    testImplementation 'junit:junit:4.13.2'
    testImplementation "androidx.room:room-testing:$room_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}